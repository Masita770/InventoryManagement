<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.InventoryManagement.mapper.ItemsMapper">

    <select id="itemsSelectAll" resultMap="itemsMap">
        SELECT items.id, items.category, items.item, items.registration_date, items.deleted_date, stocks.id, stocks.items_id, stocks.quantity FROM items
        LEFT JOIN stocks ON items.id = stocks.items_id
        LEFT JOIN orders ON stocks.id = orders.stocks_id
    </select>
    <select id="itemOrderAll" resultMap="itemsMap">
        SELECT items.id, items.category, items.item, items.registration_date, items.deleted_date, stocks.id, stocks.items_id, stocks.quantity FROM items
        LEFT JOIN stocks ON items.id = stocks.items_id
        LEFT JOIN orders ON stocks.id = orders.stocks_id
        WHERE items.id = #{id}
    </select>
    <select id="itemsSelectOne" resultType="com.example.InventoryManagement.domain.Items" resultMap="itemsMap">
        SELECT items.id, items.category, items.item, items.registration_date, items.deleted_date,
        stocks.id, stocks.items_id, stocks.quantity,
        orders.id, orders.stocks_id, orders.order_date FROM items
        LEFT JOIN stocks ON items.id = stocks.items_id
        LEFT JOIN orders ON stocks.id = orders.stocks_id
        WHERE items.id = #{id}

    </select>

    <insert id="itemAdd" useGeneratedKeys="true">
        INSERT INTO items(category, item) VALUES (#{category}, #{item})
    </insert>
<!--quantityとorderDateに値が入っていないため、データベースから持ってこれるようにする。    -->
<!--    <update id="itemDetailUpdate">-->
<!--        UPDATE items LEFT JOIN stocks ON items.id = stocks.items_id LEFT JOIN orders ON stocks.id = orders.stocks_id-->
<!--        SET stocks.quantity = stocks.quantity + orders.order_date-->
<!--        WHERE items.id = #{id}-->
<!--&lt;!&ndash;        <selectKey keyProperty="id" order="AFTER" resultType="com.example.InventoryManagement.domain.Orders">&ndash;&gt;-->
<!--&lt;!&ndash;            INSERT INTO orders(id, stocks_id, order_date) VALUES (#{id}, #{stocksId}, #{stocksList.ordersList.orderDate})&ndash;&gt;-->
<!--&lt;!&ndash;        </selectKey>&ndash;&gt;-->
<!--    </update>-->
    <delete id="deleteOrder">
        DELETE items.id, items.category, items.item, items.registration_date, items.deleted_date, stocks.id, stocks.items_id, stocks.quantity FROM items
        INNER JOIN stocks ON items.id = stocks.items_id WHERE orders.id = #{id}
    </delete>

    <insert id="itemRequestOrder" useGeneratedKeys="true">
        <selectKey keyProperty="orders.id" resultType="com.example.InventoryManagement.domain.Items" order="BEFORE">
            SELECT items.id, stocks.id, stocks.items_id, stocks.quantity,
            orders.id, orders.stocks_id, orders.order_date FROM items
            LEFT JOIN stocks ON items.id = stocks.items_id
            LEFT JOIN orders ON stocks.id = orders.stocks_id
            WHERE items.id = #{id}
        </selectKey>
        INSERT INTO orders(id, stocks_id, order_date) VALUES (#{id}, #{stocksId}, #{orderDate})
    </insert>


    <select id="orderSelect" resultMap="itemsMap">
        SELECT items.id, items.category, items.item, items.registration_date, items.deleted_date, stocks.id, stocks.items_id, stocks.quantity FROM items  INNER JOIN stocks ON items.id = stocks.items_id
    </select>



    <resultMap type="com.example.InventoryManagement.domain.Items" id="itemsMap">
        <id property="id" column="id" />
        <result property="category" column="category" />
        <result property="item" column="item" />
        <result property="registrationDate" column="registration_date" />
        <result property="deletedDate" column="deleted_date" />
        <collection property="stocksList" ofType="com.example.InventoryManagement.domain.Stocks">
            <id property="id" column="id" />
            <result property="itemsId" column="items_id" />
            <result property="quantity" column="quantity" />
            <result property="updateDate" column="update_date" />
            <collection property="ordersList" ofType="com.example.InventoryManagement.domain.Orders">
                <id property="id" column="id" />
                <result property="itemsId" column="items_id" />
                <result property="stocksId" column="stocks_id" />
                <result property="orderDate" column="order_date" />
                <result property="deliveryDate" column="delivery_date" />
            </collection>
        </collection>
    </resultMap>
</mapper>