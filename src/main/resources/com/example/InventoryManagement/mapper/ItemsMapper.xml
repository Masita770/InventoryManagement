<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.InventoryManagement.mapper.ItemsMapper">

    <select id="itemsSelectAll" resultMap="itemsMap">
        SELECT items.id, items.category, items.item, items.registration_date, items.deleted_date, stocks.id, stocks.items_id, stocks.quantity FROM items
        LEFT JOIN stocks ON items.id = stocks.items_id
<!--        SELECT items.id, items.category, items.item, items.registration_date, items.deleted_date, stocks.id, stocks.items_id, stocks.quantity FROM items-->
<!--        LEFT JOIN stocks ON items.id = stocks.items_id-->
<!--        LEFT JOIN orders ON stocks.id = orders.stocks_id-->
    </select>
    <select id="itemOrderAll" resultMap="itemsMap">
        SELECT items.id, items.category, items.item, items.registration_date, items.deleted_date, stocks.id, stocks.items_id, stocks.quantity FROM items
        LEFT JOIN stocks ON items.id = stocks.items_id
        WHERE items.id = #{id}
    </select>
    <select id="itemsSelectOne" resultMap="itemsMap">
        SELECT items.id, items.category, items.item, items.registration_date, items.deleted_date,
        stocks.id, stocks.items_id, stocks.quantity
        FROM items
        LEFT JOIN stocks ON items.id = stocks.items_id
        WHERE items.id = #{id}

    </select>

<!--    <select id="itemOrderOne" resultType="com.example.InventoryManagement.domain.Orders">-->
<!--        SELECT orders.id, orders.stocks_id, orders.order_date FROM orders WHERE orders.id = #{id}-->
<!--    </select>-->

    <insert id="itemAdd" useGeneratedKeys="true">
        INSERT INTO items(category, item) VALUES (#{category}, #{item})
    </insert>
<!--TODO: 12/23 エラーの原因を探る    -->
    <update id="itemDetailUpdate">
        UPDATE items LEFT JOIN stocks ON items.id = stocks.items_id
        LEFT JOIN orders ON items.id =
        orders.items_id
        SET
        stocks.quantity = stocks.quantity + orders.orderDate
        WHERE items.id = #{id}
    </update>
<!--    <delete id="deleteOrder">-->
<!--        DELETE items.id, items.category, items.item, items.registration_date, items.deleted_date, stocks.id, stocks.items_id, stocks.quantity FROM items-->
<!--        INNER JOIN stocks ON items.id = stocks.items_id WHERE orders.id = #{id}-->
<!--    </delete>-->

<!--    <insert id="itemOrderAdd" useGeneratedKeys="true" keyProperty="id">-->
<!--        INSERT INTO orders(stocks_id, order_date) VALUES #{stocks_id}, #{order_date}-->
<!--        <selectKey resultType="com.example.InventoryManagement.domain.Orders" keyProperty="id" order="AFTER">-->
<!--            SELECT items.id, items.category, items.item, items.registration_date, items.deleted_date,-->
<!--            stocks.id, stocks.items_id, stocks.quantity,-->
<!--            orders.id, orders.stocks_id, orders.order_date-->
<!--            FROM items-->
<!--            LEFT JOIN stocks ON items.id = stocks.items_id-->
<!--            LEFT JOIN orders ON stocks.id = orders.stocks_id-->
<!--            WHERE items.id = #{id}-->
<!--        </selectKey>-->
<!--    </insert>-->
    <insert id="itemOrderRequest" useGeneratedKeys="true">
        INSERT INTO orders(id, stocks_id, order_date) VALUES (#{id}, #{stocksId}, #{orderDate})
        <selectKey keyProperty="orders.id" resultType="com.example.InventoryManagement.domain.Items" order="AFTER">
            SELECT items.id, stocks.id, stocks.items_id, stocks.quantity,
            orders.id, orders.stocks_id, orders.order_date FROM items
            LEFT JOIN stocks ON items.id = stocks.items_id
            LEFT JOIN orders ON stocks.id = orders.stocks_id
            WHERE items.id = #{id}
        </selectKey>
<!--        <selectKey keyProperty="id" resultType="com.example.InventoryManagement.domain.Items" order="AFTER">-->
<!--            SELECT id-->
<!--        </selectKey>-->
<!--        <selectKey keyProperty="id" resultType="com.example.InventoryManagement.domain.Orders" order="AFTER">-->
<!--            SELECT id-->
<!--        </selectKey>-->
    </insert>


    <select id="orderSelect" resultMap="itemsMap">
        SELECT items.id, items.category, items.item, items.registration_date, items.deleted_date, stocks.id, stocks.items_id, stocks.quantity FROM items  INNER JOIN stocks ON items.id = stocks.items_id
    </select>



    <resultMap type="com.example.InventoryManagement.domain.Items" id="itemsMap">
        <id property="id" column="id" />
        <result property="category" column="category" />
        <result property="item" column="item" />
        <result property="registrationDate" column="registration_date" />
        <result property="deletedDate" column="deleted_date" />
        <collection property="stocksList" resultMap="stockMap" />
        <collection property="ordersList" resultMap="orderMap" />
<!--        <collection property="stocksList" ofType="com.example.InventoryManagement.domain.Stocks">-->
<!--            <id property="id" column="id" />-->
<!--            <result property="itemsId" column="items_id" />-->
<!--            <result property="quantity" column="quantity" />-->
<!--            <result property="updateDate" column="update_date" />-->
<!--            <collection property="ordersList" ofType="com.example.InventoryManagement.domain.Orders">-->
<!--                <id property="id" column="id" />-->
<!--                <result property="stocksId" column="stocks_id" />-->
<!--                <result property="orderDate" column="order_date" />-->
<!--                <result property="deliveryDate" column="delivery_date" />-->
<!--            </collection>-->
<!--        </collection>-->
    </resultMap>
    <resultMap id="stockMap" type="com.example.InventoryManagement.domain.Stocks">
        <id property="id" column="id" />
        <result property="itemsId" column="items_id" />
        <result property="quantity" column="quantity" />
        <result property="updateDate" column="update_date" />
    </resultMap>
    <resultMap id="orderMap" type="com.example.InventoryManagement.domain.Orders">
        <id property="id" column="id" />
        <result property="itemsId" column="items_id" />
        <result property="orderDate" column="order_date" />
        <result property="deliveryDate" column="delivery_date" />
    </resultMap>
</mapper>